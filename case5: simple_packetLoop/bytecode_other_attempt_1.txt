
sockex1_kern.o:	file format ELF64-BPF


Disassembly of section socket1:

0000000000000000 bpf_prog1:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	61 61 00 00 00 00 00 00	r1 = *(u32 *)(r6 + 0)
       2:	07 01 00 00 ff ff ff ff	r1 += -1
       3:	67 01 00 00 20 00 00 00	r1 <<= 32
       4:	77 01 00 00 20 00 00 00	r1 >>= 32
       5:	25 01 0e 00 cf 07 00 00	if r1 > 1999 goto +14 <LBB0_3>
       6:	b7 07 00 00 00 00 00 00	r7 = 0
       7:	b7 08 00 00 25 78 20 00	r8 = 2127909

0000000000000040 LBB0_2:
       8:	50 70 00 00 00 00 00 00	r0 = *(u8 *)skb[r7]
       9:	63 8a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r8
      10:	67 00 00 00 38 00 00 00	r0 <<= 56
      11:	c7 00 00 00 38 00 00 00	r0 s>>= 56
      12:	bf a1 00 00 00 00 00 00	r1 = r10
      13:	07 01 00 00 fc ff ff ff	r1 += -4
      14:	b7 02 00 00 04 00 00 00	r2 = 4
      15:	bf 03 00 00 00 00 00 00	r3 = r0
      16:	85 00 00 00 06 00 00 00	call 6
      17:	07 07 00 00 01 00 00 00	r7 += 1
      18:	61 61 00 00 00 00 00 00	r1 = *(u32 *)(r6 + 0)
      19:	2d 71 f4 ff 00 00 00 00	if r1 > r7 goto -12 <LBB0_2>

00000000000000a0 LBB0_3:
      20:	b7 00 00 00 00 00 00 00	r0 = 0
      21:	95 00 00 00 00 00 00 00	exit
