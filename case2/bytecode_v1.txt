
sockex1_kern.o:	file format ELF64-BPF


Disassembly of section socket1:

0000000000000000 bpf_prog1:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	30 00 00 00 17 00 00 00	r0 = *(u8 *)skb[23]
       2:	bf 09 00 00 00 00 00 00	r9 = r0
       3:	63 9a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r9
       4:	28 00 00 00 0c 00 00 00	r0 = *(u16 *)skb[12]
       5:	63 0a f8 ff 00 00 00 00	*(u32 *)(r10 - 8) = r0
       6:	28 00 00 00 12 00 00 00	r0 = *(u16 *)skb[18]
       7:	63 0a f4 ff 00 00 00 00	*(u32 *)(r10 - 12) = r0
       8:	30 00 00 00 0e 00 00 00	r0 = *(u8 *)skb[14]
       9:	bf 08 00 00 00 00 00 00	r8 = r0
      10:	63 8a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r8
      11:	28 00 00 00 10 00 00 00	r0 = *(u16 *)skb[16]
      12:	bf 07 00 00 00 00 00 00	r7 = r0
      13:	63 7a ec ff 00 00 00 00	*(u32 *)(r10 - 20) = r7
      14:	b7 03 00 00 00 00 00 00	r3 = 0
      15:	63 3a e8 ff 00 00 00 00	*(u32 *)(r10 - 24) = r3
      16:	67 08 00 00 02 00 00 00	r8 <<= 2
      17:	57 08 00 00 3c 00 00 00	r8 &= 60
      18:	bf 84 00 00 00 00 00 00	r4 = r8
      19:	07 04 00 00 0e 00 00 00	r4 += 14
      20:	1f 87 00 00 00 00 00 00	r7 -= r8
      21:	bf 91 00 00 00 00 00 00	r1 = r9
      22:	67 01 00 00 20 00 00 00	r1 <<= 32
      23:	77 01 00 00 20 00 00 00	r1 >>= 32
      24:	b7 02 00 00 00 00 00 00	r2 = 0
      25:	7b 2a b0 ff 00 00 00 00	*(u64 *)(r10 - 80) = r2
      26:	7b 4a a0 ff 00 00 00 00	*(u64 *)(r10 - 96) = r4
      27:	bf 42 00 00 00 00 00 00	r2 = r4
      28:	55 01 15 00 01 00 00 00	if r1 != 1 goto +21 <LBB0_2>
      29:	b7 01 00 00 00 00 00 00	r1 = 0
      30:	73 1a cc ff 00 00 00 00	*(u8 *)(r10 - 52) = r1
      31:	b7 01 00 00 4b 45 54 0a	r1 = 173294923
      32:	63 1a c8 ff 00 00 00 00	*(u32 *)(r10 - 56) = r1
      33:	18 01 00 00 49 43 4d 50 00 00 00 00 20 50 41 43	r1 = 4846242773743780681 ll
      35:	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r1
      36:	bf a1 00 00 00 00 00 00	r1 = r10
      37:	07 01 00 00 c0 ff ff ff	r1 += -64
      38:	b7 02 00 00 0d 00 00 00	r2 = 13
      39:	85 00 00 00 06 00 00 00	call 6
      40:	b7 01 00 00 01 00 00 00	r1 = 1
      41:	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 80) = r1
      42:	07 07 00 00 f8 ff ff ff	r7 += -8
      43:	bf 89 00 00 00 00 00 00	r9 = r8
      44:	07 09 00 00 16 00 00 00	r9 += 22
      45:	50 90 00 00 00 00 00 00	r0 = *(u8 *)skb[r9]
      46:	b7 03 00 00 00 00 00 00	r3 = 0
      47:	bf 92 00 00 00 00 00 00	r2 = r9
      48:	61 a9 fc ff 00 00 00 00	r9 = *(u32 *)(r10 - 4)
      49:	63 0a e8 ff 00 00 00 00	*(u32 *)(r10 - 24) = r0

0000000000000190 LBB0_2:
      50:	63 3a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r3
      51:	bf 91 00 00 00 00 00 00	r1 = r9
      52:	67 01 00 00 20 00 00 00	r1 <<= 32
      53:	77 01 00 00 20 00 00 00	r1 >>= 32
      54:	55 01 13 00 11 00 00 00	if r1 != 17 goto +19 <LBB0_4>
      55:	b7 01 00 00 45 54 0a 00	r1 = 676933
      56:	63 1a c8 ff 00 00 00 00	*(u32 *)(r10 - 56) = r1
      57:	18 01 00 00 55 44 50 20 00 00 00 00 50 41 43 4b	r1 = 5423250188679529557 ll
      59:	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r1
      60:	bf a1 00 00 00 00 00 00	r1 = r10
      61:	07 01 00 00 c0 ff ff ff	r1 += -64
      62:	7b 2a a8 ff 00 00 00 00	*(u64 *)(r10 - 88) = r2
      63:	b7 02 00 00 0c 00 00 00	r2 = 12
      64:	85 00 00 00 06 00 00 00	call 6
      65:	bf 89 00 00 00 00 00 00	r9 = r8
      66:	07 09 00 00 16 00 00 00	r9 += 22
      67:	40 90 00 00 00 00 00 00	r0 = *(u32 *)skb[r9]
      68:	79 a2 a8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 88)
      69:	b7 03 00 00 01 00 00 00	r3 = 1
      70:	07 02 00 00 08 00 00 00	r2 += 8
      71:	07 07 00 00 f8 ff ff ff	r7 += -8
      72:	61 a9 fc ff 00 00 00 00	r9 = *(u32 *)(r10 - 4)
      73:	63 0a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r0

0000000000000250 LBB0_4:
      74:	67 09 00 00 20 00 00 00	r9 <<= 32
      75:	77 09 00 00 20 00 00 00	r9 >>= 32
      76:	55 09 19 00 06 00 00 00	if r9 != 6 goto +25 <LBB0_6>
      77:	b7 01 00 00 45 54 0a 00	r1 = 676933
      78:	63 1a c8 ff 00 00 00 00	*(u32 *)(r10 - 56) = r1
      79:	18 01 00 00 54 43 50 20 00 00 00 00 50 41 43 4b	r1 = 5423250188679529300 ll
      81:	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r1
      82:	bf a1 00 00 00 00 00 00	r1 = r10
      83:	07 01 00 00 c0 ff ff ff	r1 += -64
      84:	7b 2a a8 ff 00 00 00 00	*(u64 *)(r10 - 88) = r2
      85:	b7 02 00 00 0c 00 00 00	r2 = 12
      86:	85 00 00 00 06 00 00 00	call 6
      87:	07 08 00 00 1a 00 00 00	r8 += 26
      88:	50 80 00 00 00 00 00 00	r0 = *(u8 *)skb[r8]
      89:	bf 08 00 00 00 00 00 00	r8 = r0
      90:	77 08 00 00 02 00 00 00	r8 >>= 2
      91:	57 08 00 00 3c 00 00 00	r8 &= 60
      92:	bf 89 00 00 00 00 00 00	r9 = r8
      93:	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 88)
      94:	0f 19 00 00 00 00 00 00	r9 += r1
      95:	1f 87 00 00 00 00 00 00	r7 -= r8
      96:	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 96)
      97:	0f 18 00 00 00 00 00 00	r8 += r1
      98:	40 80 00 00 00 00 00 00	r0 = *(u32 *)skb[r8]
      99:	b7 03 00 00 01 00 00 00	r3 = 1
     100:	63 0a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r0
     101:	bf 92 00 00 00 00 00 00	r2 = r9

0000000000000330 LBB0_6:
     102:	61 61 04 00 00 00 00 00	r1 = *(u32 *)(r6 + 4)
     103:	55 01 77 00 04 00 00 00	if r1 != 4 goto +119 <LBB0_30>
     104:	bf 39 00 00 00 00 00 00	r9 = r3
     105:	bf 28 00 00 00 00 00 00	r8 = r2
     106:	bf a2 00 00 00 00 00 00	r2 = r10
     107:	07 02 00 00 fc ff ff ff	r2 += -4
     108:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     110:	85 00 00 00 01 00 00 00	call 1
     111:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_9>
     112:	b7 01 00 00 01 00 00 00	r1 = 1
     113:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

0000000000000390 LBB0_9:
     114:	bf a2 00 00 00 00 00 00	r2 = r10
     115:	07 02 00 00 f8 ff ff ff	r2 += -8
     116:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     118:	85 00 00 00 01 00 00 00	call 1
     119:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_11>
     120:	b7 01 00 00 01 00 00 00	r1 = 1
     121:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

00000000000003d0 LBB0_11:
     122:	bf a2 00 00 00 00 00 00	r2 = r10
     123:	07 02 00 00 f4 ff ff ff	r2 += -12
     124:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     126:	85 00 00 00 01 00 00 00	call 1
     127:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_13>
     128:	b7 01 00 00 01 00 00 00	r1 = 1
     129:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

0000000000000410 LBB0_13:
     130:	bf a2 00 00 00 00 00 00	r2 = r10
     131:	07 02 00 00 f0 ff ff ff	r2 += -16
     132:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     134:	85 00 00 00 01 00 00 00	call 1
     135:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_15>
     136:	b7 01 00 00 01 00 00 00	r1 = 1
     137:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

0000000000000450 LBB0_15:
     138:	bf a2 00 00 00 00 00 00	r2 = r10
     139:	07 02 00 00 ec ff ff ff	r2 += -20
     140:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     142:	85 00 00 00 01 00 00 00	call 1
     143:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_17>
     144:	b7 01 00 00 01 00 00 00	r1 = 1
     145:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

0000000000000490 LBB0_17:
     146:	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 80)
     147:	15 01 08 00 00 00 00 00	if r1 == 0 goto +8 <LBB0_20>
     148:	bf a2 00 00 00 00 00 00	r2 = r10
     149:	07 02 00 00 e8 ff ff ff	r2 += -24
     150:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     152:	85 00 00 00 01 00 00 00	call 1
     153:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_20>
     154:	b7 01 00 00 01 00 00 00	r1 = 1
     155:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

00000000000004e0 LBB0_20:
     156:	15 09 12 00 00 00 00 00	if r9 == 0 goto +18 <LBB0_24>
     157:	bf a2 00 00 00 00 00 00	r2 = r10
     158:	07 02 00 00 e4 ff ff ff	r2 += -28
     159:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     161:	85 00 00 00 01 00 00 00	call 1
     162:	b7 01 00 00 01 00 00 00	r1 = 1
     163:	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r1
     164:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_23>
     165:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1
     166:	05 00 08 00 00 00 00 00	goto +8 <LBB0_24>

0000000000000538 LBB0_23:
     167:	bf a2 00 00 00 00 00 00	r2 = r10
     168:	07 02 00 00 e4 ff ff ff	r2 += -28
     169:	bf a3 00 00 00 00 00 00	r3 = r10
     170:	07 03 00 00 c0 ff ff ff	r3 += -64
     171:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     173:	b7 04 00 00 01 00 00 00	r4 = 1
     174:	85 00 00 00 02 00 00 00	call 2

0000000000000578 LBB0_24:
     175:	b7 01 00 00 0a 00 00 00	r1 = 10
     176:	6b 1a d8 ff 00 00 00 00	*(u16 *)(r10 - 40) = r1
     177:	18 01 00 00 20 70 61 79 00 00 00 00 6c 6f 61 64	r1 = 7233184988217307168 ll
     179:	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 48) = r1
     180:	18 01 00 00 74 68 65 20 00 00 00 00 64 61 74 61	r1 = 7022344801645586548 ll
     182:	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 56) = r1
     183:	18 01 00 00 54 68 69 73 00 00 00 00 20 69 73 20	r1 = 2338328219631577172 ll
     185:	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r1
     186:	bf a1 00 00 00 00 00 00	r1 = r10
     187:	07 01 00 00 c0 ff ff ff	r1 += -64
     188:	b7 02 00 00 1a 00 00 00	r2 = 26
     189:	85 00 00 00 06 00 00 00	call 6
     190:	67 07 00 00 20 00 00 00	r7 <<= 32
     191:	bf 71 00 00 00 00 00 00	r1 = r7
     192:	c7 01 00 00 20 00 00 00	r1 s>>= 32
     193:	b7 02 00 00 01 00 00 00	r2 = 1
     194:	6d 12 14 00 00 00 00 00	if r2 s> r1 goto +20 <LBB0_29>
     195:	27 08 00 00 b0 00 00 00	r8 *= 176
     196:	0f 86 00 00 00 00 00 00	r6 += r8
     197:	77 07 00 00 20 00 00 00	r7 >>= 32
     198:	b7 08 00 00 25 63 20 00	r8 = 2122533
     199:	05 00 03 00 00 00 00 00	goto +3 <LBB0_26>

0000000000000640 LBB0_28:
     200:	07 06 00 00 01 00 00 00	r6 += 1
     201:	07 07 00 00 ff ff ff ff	r7 += -1
     202:	15 07 0c 00 00 00 00 00	if r7 == 0 goto +12 <LBB0_29>

0000000000000658 LBB0_26:
     203:	71 61 00 00 00 00 00 00	r1 = *(u8 *)(r6 + 0)
     204:	bf 12 00 00 00 00 00 00	r2 = r1
     205:	07 02 00 00 e0 ff ff ff	r2 += -32
     206:	57 02 00 00 ff 00 00 00	r2 &= 255
     207:	25 02 f8 ff 5e 00 00 00	if r2 > 94 goto -8 <LBB0_28>
     208:	63 8a bc ff 00 00 00 00	*(u32 *)(r10 - 68) = r8
     209:	bf 13 00 00 00 00 00 00	r3 = r1
     210:	bf a1 00 00 00 00 00 00	r1 = r10
     211:	07 01 00 00 bc ff ff ff	r1 += -68
     212:	b7 02 00 00 04 00 00 00	r2 = 4
     213:	85 00 00 00 06 00 00 00	call 6
     214:	05 00 f1 ff 00 00 00 00	goto -15 <LBB0_28>

00000000000006b8 LBB0_29:
     215:	b7 01 00 00 00 00 00 00	r1 = 0
     216:	73 1a be ff 00 00 00 00	*(u8 *)(r10 - 66) = r1
     217:	b7 01 00 00 0a 0a 00 00	r1 = 2570
     218:	6b 1a bc ff 00 00 00 00	*(u16 *)(r10 - 68) = r1
     219:	bf a1 00 00 00 00 00 00	r1 = r10
     220:	07 01 00 00 bc ff ff ff	r1 += -68
     221:	b7 02 00 00 03 00 00 00	r2 = 3
     222:	85 00 00 00 06 00 00 00	call 6

00000000000006f8 LBB0_30:
     223:	b7 00 00 00 00 00 00 00	r0 = 0
     224:	95 00 00 00 00 00 00 00	exit
