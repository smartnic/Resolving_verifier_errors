
sockex1_kern.o:	file format ELF64-BPF


Disassembly of section socket1:

0000000000000000 bpf_prog1:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	30 00 00 00 17 00 00 00	r0 = *(u8 *)skb[23]
       2:	bf 09 00 00 00 00 00 00	r9 = r0
       3:	63 9a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r9
       4:	28 00 00 00 0c 00 00 00	r0 = *(u16 *)skb[12]
       5:	63 0a f8 ff 00 00 00 00	*(u32 *)(r10 - 8) = r0
       6:	28 00 00 00 12 00 00 00	r0 = *(u16 *)skb[18]
       7:	63 0a f4 ff 00 00 00 00	*(u32 *)(r10 - 12) = r0
       8:	30 00 00 00 0e 00 00 00	r0 = *(u8 *)skb[14]
       9:	bf 08 00 00 00 00 00 00	r8 = r0
      10:	63 8a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r8
      11:	28 00 00 00 10 00 00 00	r0 = *(u16 *)skb[16]
      12:	63 0a ec ff 00 00 00 00	*(u32 *)(r10 - 20) = r0
      13:	b7 02 00 00 00 00 00 00	r2 = 0
      14:	63 2a e8 ff 00 00 00 00	*(u32 *)(r10 - 24) = r2
      15:	67 08 00 00 02 00 00 00	r8 <<= 2
      16:	57 08 00 00 3c 00 00 00	r8 &= 60
      17:	bf 84 00 00 00 00 00 00	r4 = r8
      18:	07 04 00 00 0e 00 00 00	r4 += 14
      19:	1f 80 00 00 00 00 00 00	r0 -= r8
      20:	7b 0a 90 ff 00 00 00 00	*(u64 *)(r10 - 112) = r0
      21:	bf 91 00 00 00 00 00 00	r1 = r9
      22:	67 01 00 00 20 00 00 00	r1 <<= 32
      23:	77 01 00 00 20 00 00 00	r1 >>= 32
      24:	b7 03 00 00 00 00 00 00	r3 = 0
      25:	7b 3a 80 ff 00 00 00 00	*(u64 *)(r10 - 128) = r3
      26:	7b 4a 78 ff 00 00 00 00	*(u64 *)(r10 - 136) = r4
      27:	7b 4a 88 ff 00 00 00 00	*(u64 *)(r10 - 120) = r4
      28:	55 01 17 00 01 00 00 00	if r1 != 1 goto +23 <LBB0_2>
      29:	b7 01 00 00 00 00 00 00	r1 = 0
      30:	73 1a ac ff 00 00 00 00	*(u8 *)(r10 - 84) = r1
      31:	b7 01 00 00 4b 45 54 0a	r1 = 173294923
      32:	63 1a a8 ff 00 00 00 00	*(u32 *)(r10 - 88) = r1
      33:	18 01 00 00 49 43 4d 50 00 00 00 00 20 50 41 43	r1 = 4846242773743780681 ll
      35:	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 96) = r1
      36:	bf a1 00 00 00 00 00 00	r1 = r10
      37:	07 01 00 00 a0 ff ff ff	r1 += -96
      38:	b7 02 00 00 0d 00 00 00	r2 = 13
      39:	85 00 00 00 06 00 00 00	call 6
      40:	b7 01 00 00 01 00 00 00	r1 = 1
      41:	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 128) = r1
      42:	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 112)
      43:	07 01 00 00 f8 ff ff ff	r1 += -8
      44:	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 112) = r1
      45:	bf 87 00 00 00 00 00 00	r7 = r8
      46:	07 07 00 00 16 00 00 00	r7 += 22
      47:	7b 7a 88 ff 00 00 00 00	*(u64 *)(r10 - 120) = r7
      48:	50 70 00 00 00 00 00 00	r0 = *(u8 *)skb[r7]
      49:	b7 02 00 00 00 00 00 00	r2 = 0
      50:	61 a9 fc ff 00 00 00 00	r9 = *(u32 *)(r10 - 4)
      51:	63 0a e8 ff 00 00 00 00	*(u32 *)(r10 - 24) = r0

00000000000001a0 LBB0_2:
      52:	63 2a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r2
      53:	bf 91 00 00 00 00 00 00	r1 = r9
      54:	67 01 00 00 20 00 00 00	r1 <<= 32
      55:	77 01 00 00 20 00 00 00	r1 >>= 32
      56:	55 01 15 00 11 00 00 00	if r1 != 17 goto +21 <LBB0_4>
      57:	b7 01 00 00 45 54 0a 00	r1 = 676933
      58:	63 1a a8 ff 00 00 00 00	*(u32 *)(r10 - 88) = r1
      59:	18 01 00 00 55 44 50 20 00 00 00 00 50 41 43 4b	r1 = 5423250188679529557 ll
      61:	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 96) = r1
      62:	bf a1 00 00 00 00 00 00	r1 = r10
      63:	07 01 00 00 a0 ff ff ff	r1 += -96
      64:	b7 02 00 00 0c 00 00 00	r2 = 12
      65:	85 00 00 00 06 00 00 00	call 6
      66:	bf 87 00 00 00 00 00 00	r7 = r8
      67:	07 07 00 00 16 00 00 00	r7 += 22
      68:	40 70 00 00 00 00 00 00	r0 = *(u32 *)skb[r7]
      69:	b7 02 00 00 01 00 00 00	r2 = 1
      70:	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 120)
      71:	07 01 00 00 08 00 00 00	r1 += 8
      72:	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 120) = r1
      73:	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 112)
      74:	07 01 00 00 f8 ff ff ff	r1 += -8
      75:	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 112) = r1
      76:	61 a9 fc ff 00 00 00 00	r9 = *(u32 *)(r10 - 4)
      77:	63 0a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r0

0000000000000270 LBB0_4:
      78:	67 09 00 00 20 00 00 00	r9 <<= 32
      79:	77 09 00 00 20 00 00 00	r9 >>= 32
      80:	55 09 1a 00 06 00 00 00	if r9 != 6 goto +26 <LBB0_6>
      81:	b7 01 00 00 45 54 0a 00	r1 = 676933
      82:	63 1a a8 ff 00 00 00 00	*(u32 *)(r10 - 88) = r1
      83:	18 01 00 00 54 43 50 20 00 00 00 00 50 41 43 4b	r1 = 5423250188679529300 ll
      85:	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 96) = r1
      86:	bf a1 00 00 00 00 00 00	r1 = r10
      87:	07 01 00 00 a0 ff ff ff	r1 += -96
      88:	b7 02 00 00 0c 00 00 00	r2 = 12
      89:	85 00 00 00 06 00 00 00	call 6
      90:	07 08 00 00 1a 00 00 00	r8 += 26
      91:	50 80 00 00 00 00 00 00	r0 = *(u8 *)skb[r8]
      92:	bf 08 00 00 00 00 00 00	r8 = r0
      93:	77 08 00 00 02 00 00 00	r8 >>= 2
      94:	57 08 00 00 3c 00 00 00	r8 &= 60
      95:	bf 87 00 00 00 00 00 00	r7 = r8
      96:	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 120)
      97:	0f 17 00 00 00 00 00 00	r7 += r1
      98:	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 112)
      99:	1f 81 00 00 00 00 00 00	r1 -= r8
     100:	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 112) = r1
     101:	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 136)
     102:	0f 18 00 00 00 00 00 00	r8 += r1
     103:	40 80 00 00 00 00 00 00	r0 = *(u32 *)skb[r8]
     104:	b7 02 00 00 01 00 00 00	r2 = 1
     105:	63 0a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r0
     106:	7b 7a 88 ff 00 00 00 00	*(u64 *)(r10 - 120) = r7

0000000000000358 LBB0_6:
     107:	61 61 04 00 00 00 00 00	r1 = *(u32 *)(r6 + 4)
     108:	55 01 87 00 04 00 00 00	if r1 != 4 goto +135 <LBB0_29>
     109:	bf 27 00 00 00 00 00 00	r7 = r2
     110:	bf a2 00 00 00 00 00 00	r2 = r10
     111:	07 02 00 00 fc ff ff ff	r2 += -4
     112:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     114:	85 00 00 00 01 00 00 00	call 1
     115:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_9>
     116:	b7 01 00 00 01 00 00 00	r1 = 1
     117:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

00000000000003b0 LBB0_9:
     118:	bf a2 00 00 00 00 00 00	r2 = r10
     119:	07 02 00 00 f8 ff ff ff	r2 += -8
     120:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     122:	85 00 00 00 01 00 00 00	call 1
     123:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_11>
     124:	b7 01 00 00 01 00 00 00	r1 = 1
     125:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

00000000000003f0 LBB0_11:
     126:	bf a2 00 00 00 00 00 00	r2 = r10
     127:	07 02 00 00 f4 ff ff ff	r2 += -12
     128:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     130:	85 00 00 00 01 00 00 00	call 1
     131:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_13>
     132:	b7 01 00 00 01 00 00 00	r1 = 1
     133:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

0000000000000430 LBB0_13:
     134:	bf a2 00 00 00 00 00 00	r2 = r10
     135:	07 02 00 00 f0 ff ff ff	r2 += -16
     136:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     138:	85 00 00 00 01 00 00 00	call 1
     139:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_15>
     140:	b7 01 00 00 01 00 00 00	r1 = 1
     141:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

0000000000000470 LBB0_15:
     142:	bf a2 00 00 00 00 00 00	r2 = r10
     143:	07 02 00 00 ec ff ff ff	r2 += -20
     144:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     146:	85 00 00 00 01 00 00 00	call 1
     147:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_17>
     148:	b7 01 00 00 01 00 00 00	r1 = 1
     149:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

00000000000004b0 LBB0_17:
     150:	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 128)
     151:	15 01 08 00 00 00 00 00	if r1 == 0 goto +8 <LBB0_20>
     152:	bf a2 00 00 00 00 00 00	r2 = r10
     153:	07 02 00 00 e8 ff ff ff	r2 += -24
     154:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     156:	85 00 00 00 01 00 00 00	call 1
     157:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_20>
     158:	b7 01 00 00 01 00 00 00	r1 = 1
     159:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1

0000000000000500 LBB0_20:
     160:	15 07 12 00 00 00 00 00	if r7 == 0 goto +18 <LBB0_24>
     161:	bf a2 00 00 00 00 00 00	r2 = r10
     162:	07 02 00 00 e4 ff ff ff	r2 += -28
     163:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     165:	85 00 00 00 01 00 00 00	call 1
     166:	b7 01 00 00 01 00 00 00	r1 = 1
     167:	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 96) = r1
     168:	15 00 02 00 00 00 00 00	if r0 == 0 goto +2 <LBB0_23>
     169:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1
     170:	05 00 08 00 00 00 00 00	goto +8 <LBB0_24>

0000000000000558 LBB0_23:
     171:	bf a2 00 00 00 00 00 00	r2 = r10
     172:	07 02 00 00 e4 ff ff ff	r2 += -28
     173:	bf a3 00 00 00 00 00 00	r3 = r10
     174:	07 03 00 00 a0 ff ff ff	r3 += -96
     175:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     177:	b7 04 00 00 01 00 00 00	r4 = 1
     178:	85 00 00 00 02 00 00 00	call 2

0000000000000598 LBB0_24:
     179:	b7 01 00 00 20 25 64 2e	r1 = 778315040
     180:	63 1a d0 ff 00 00 00 00	*(u32 *)(r10 - 48) = r1
     181:	18 01 00 00 66 20 64 61 00 00 00 00 74 61 20 3d	r1 = 4404627588046397542 ll
     183:	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 56) = r1
     184:	18 01 00 00 4c 65 6e 67 00 00 00 00 74 68 20 6f	r1 = 8007514986625525068 ll
     186:	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r1
     187:	b7 07 00 00 0a 00 00 00	r7 = 10
     188:	6b 7a d4 ff 00 00 00 00	*(u16 *)(r10 - 44) = r7
     189:	bf a1 00 00 00 00 00 00	r1 = r10
     190:	07 01 00 00 c0 ff ff ff	r1 += -64
     191:	b7 02 00 00 16 00 00 00	r2 = 22
     192:	79 a8 90 ff 00 00 00 00	r8 = *(u64 *)(r10 - 112)
     193:	bf 83 00 00 00 00 00 00	r3 = r8
     194:	85 00 00 00 06 00 00 00	call 6
     195:	6b 7a b8 ff 00 00 00 00	*(u16 *)(r10 - 72) = r7
     196:	18 01 00 00 20 70 61 79 00 00 00 00 6c 6f 61 64	r1 = 7233184988217307168 ll
     198:	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 80) = r1
     199:	18 01 00 00 74 68 65 20 00 00 00 00 64 61 74 61	r1 = 7022344801645586548 ll
     201:	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 88) = r1
     202:	18 01 00 00 54 68 69 73 00 00 00 00 20 69 73 20	r1 = 2338328219631577172 ll
     204:	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 96) = r1
     205:	bf a1 00 00 00 00 00 00	r1 = r10
     206:	07 01 00 00 a0 ff ff ff	r1 += -96
     207:	b7 02 00 00 1a 00 00 00	r2 = 26
     208:	85 00 00 00 06 00 00 00	call 6
     209:	67 08 00 00 20 00 00 00	r8 <<= 32
     210:	7b 8a 90 ff 00 00 00 00	*(u64 *)(r10 - 112) = r8
     211:	c7 08 00 00 20 00 00 00	r8 s>>= 32
     212:	b7 02 00 00 01 00 00 00	r2 = 1
     213:	6d 82 16 00 00 00 00 00	if r2 s> r8 goto +22 <LBB0_28>
     214:	b7 08 00 00 00 00 00 00	r8 = 0
     215:	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 112)
     216:	77 01 00 00 20 00 00 00	r1 >>= 32
     217:	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 112) = r1

00000000000006d0 LBB0_26:
     218:	bf 89 00 00 00 00 00 00	r9 = r8
     219:	79 a7 88 ff 00 00 00 00	r7 = *(u64 *)(r10 - 120)
     220:	0f 97 00 00 00 00 00 00	r7 += r9
     221:	50 70 00 00 00 00 00 00	r0 = *(u8 *)skb[r7]
     222:	b7 01 00 00 25 78 20 00	r1 = 2127909
     223:	63 1a 9c ff 00 00 00 00	*(u32 *)(r10 - 100) = r1
     224:	67 00 00 00 38 00 00 00	r0 <<= 56
     225:	c7 00 00 00 38 00 00 00	r0 s>>= 56
     226:	bf a1 00 00 00 00 00 00	r1 = r10
     227:	07 01 00 00 9c ff ff ff	r1 += -100
     228:	b7 02 00 00 04 00 00 00	r2 = 4
     229:	bf 03 00 00 00 00 00 00	r3 = r0
     230:	85 00 00 00 06 00 00 00	call 6
     231:	07 08 00 00 01 00 00 00	r8 += 1
     232:	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 112)
     233:	3d 18 02 00 00 00 00 00	if r8 >= r1 goto +2 <LBB0_28>
     234:	b7 01 00 00 40 1f 00 00	r1 = 8000
     235:	2d 91 ee ff 00 00 00 00	if r1 > r9 goto -18 <LBB0_26>

0000000000000760 LBB0_28:
     236:	b7 01 00 00 00 00 00 00	r1 = 0
     237:	73 1a 9e ff 00 00 00 00	*(u8 *)(r10 - 98) = r1
     238:	b7 01 00 00 0a 0a 00 00	r1 = 2570
     239:	6b 1a 9c ff 00 00 00 00	*(u16 *)(r10 - 100) = r1
     240:	bf a1 00 00 00 00 00 00	r1 = r10
     241:	07 01 00 00 9c ff ff ff	r1 += -100
     242:	b7 02 00 00 03 00 00 00	r2 = 3
     243:	85 00 00 00 06 00 00 00	call 6

00000000000007a0 LBB0_29:
     244:	b7 00 00 00 00 00 00 00	r0 = 0
     245:	95 00 00 00 00 00 00 00	exit
